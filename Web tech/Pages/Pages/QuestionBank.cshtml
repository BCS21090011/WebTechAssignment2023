@page
@model Web_tech.Pages.QuestionBankModel
@{
}

<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
          integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link rel="stylesheet" href="index.css">
    <link rel="stylesheet" href="~/css/QATablesVer4.css">

    <style>

        body {
            font-family: 'Roboto', sans-serif;
            background-color: grey;
        }

        .ui-w-100 {
            width: 100px !important;
            height: auto;
        }

        .container {
            padding: 20px;
        }


        .card {
            margin-top: 80px;
            border: none;
            border-radius: 0;
            box-shadow: 0 1px 4px rgba(24, 28, 33, 0.012);
            background: rgba(255, 255, 255, 0.72);
            border-radius: 16px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }

        .user-view-table td:first-child {
            width: 9rem;
        }

        .user-view-table td {
            padding-right: 0;
            padding-left: 0;
            border: 0;
        }

        .text-light {
            color: #babbbc !important;
        }

        .card .row-bordered > [class*=" col-"]::after {
            border-color: rgba(24, 28, 33, 0.075);
        }

        .text-xlarge {
            font-size: 170% !important;
        }

        .btn-primary {
            color: #fff;
            background-color: #007bff;
            border-color: #007bff;
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
            line-height: 1.5;
            border-radius: 0.2rem;
        }

            .btn-primary:hover {
                color: #fff;
                background-color: #0069d9;
                border-color: #0062cc;
            }

            .btn-primary:focus, .btn-primary.focus {
                box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);
            }



        .history-title {
            font-size: 20rem;
            font-weight: bold;
            margin-bottom: 1.25rem;
        }

        .table {
            background-color: #fff;
            border-radius: 4px;
        }

            .table th,
            .table td {
                border: none;
                padding: 10px 15px;
            }

            .table th {
                font-weight: 600;
                text-align: left;
            }

            .table tbody tr:nth-child(even) {
            }

        .cardquestionbank {
            width: auto;
            height: auto;
            margin-top: 80px;
            border: none;
            border-radius: 0;
            display: table;
            padding: 30px 30px;
            box-shadow: 0 1px 4px rgba(24, 28, 33, 0.012);
            background: rgba(255, 255, 255, 0.24);
            border-radius: 16px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }

        .btn-top-left {
            position: absolute;
            top: 60px;
            right: 30px;
            background-color: black;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease-in-out;
        }

            .btn-top-left:hover {
                background-color: black;
                color: wheat;
                border-color: #007bff;
                cursor: pointer;
            }

    </style>
</head>

<body>
    <div class="cardquestionbank mb-4" style="margin-left: auto; margin-right: auto;">
        <button onclick="redirectToPage()" class="btn-top-left">New Question</button>
        <h2 class="mt-4 mb-3" style="text-align: left; font-weight:bold; color:black;">Question Bank</h2>
        <hr class="border-light m-0">
        <div class="table-responsive" id="questionbanks" style="margin: auto; height: 60vh; max-height: 60vh; overflow-y: auto; width: 80vw;">
        </div>
        <div style="display: flex; justify-content: center; align-items: center;">
            <button onclick="PrevChunck()">Prev</button>
            <input type="number" id="CurPageNum" value="1" min="1" oninput="CurPageNumFunc()" onchange="CurPageNumFunc()" style="text-align: center;">
            <span id="MaxPageNum"></span>
            <button onclick="NextChunck()">Next</button>
        </div>
    </div>

    <script src="~/js/QATablesVer2.js"></script>
    <script src="~/js/ConvertValues.js"></script>
    <script>
        function redirectToPage() {
            window.location.href = '/Pages/KeyInPage';
        }

    </script>
    <script>
        var subjects = {};
        @foreach (var subject in Model.Subjects)
        {
            @:subjects[@subject.SubjectsId] = "@subject.SubjectName";
        }

        var difficulty = {
            1: "Easy",
            2: "Medium",
            3: "Hard"
        };

        var Qsts = [];

        function AppendQuestionsList(list, id, qst, mark, subject, difficulty, qstImgFileName, ans, ansImgFileName) {
            let question = {
                ID: id,
                Qst: qst,
                Mark: mark,
                Subject: subject,
                Difficulty: difficulty,
                QstImgFileName: qstImgFileName,
                Ans: ans,
                AnsImgFileName: ansImgFileName
            }

            list.push(question);
        }
        @foreach(var qst in Model.Qsts)
        {
            @:AppendQuestionsList(Qsts, @qst.QuestionsId, "@qst.Question", @qst.QuestionMark, "@qst.SubjectsId", "@qst.QuestionDifficulty", "@qst.QuestionImageFileName", "@qst.Answer", "@qst.AnswerImageFileName");
        }

        ConvertAttrToValue(Qsts, "Subject", subjects);
        ConvertAttrToValue(Qsts, "Difficulty", difficulty);
    </script>
    <script>
        function SplitArrayIntoChuncks(array, sizePerChunck) {
            let chuncks = [];

            for (let i = 0; i < array.length; i += sizePerChunck) {
                const chunck = array.slice(i, i + sizePerChunck);
                chuncks.push(chunck);
            }

            return chuncks;
        }

        let QstsChuncks = SplitArrayIntoChuncks(Qsts, 10);
        var curChunckIndex = 0;

        const curPageNum = document.getElementById("CurPageNum");
        const maxPageNum = document.getElementById("MaxPageNum");
        if (QstsChuncks.length > 0) {
            curPageNum.max = QstsChuncks.length;
            maxPageNum.textContent = '/' + QstsChuncks.length;
        }
        else {
            curPageNum.max = 1;
            maxPageNum.textContent = '/' + 1;
        }

        function CurPageNumFunc() {
            const page = parseInt(curPageNum.value);
            if (!isNaN(page)) {
                GotoChunckIndex(page - 1);
            }
        }

        function NextChunck() {
            if (curChunckIndex < QstsChuncks.length - 1) {
                GotoChunckIndex(curChunckIndex + 1);
            }
            else {
                GotoChunckIndex(0);
            }
        }

        function PrevChunck() {
            if (curChunckIndex > 0) {
                GotoChunckIndex(curChunckIndex - 1);
            }
            else {
                GotoChunckIndex(QstsChuncks.length - 1);
            }
        }

        function GotoChunckIndex(index) {
            if (index >= 0 && index < QstsChuncks.length) {
                curPageNum.value = index + 1;
                curChunckIndex = index;
                CreateQATable(QstsChuncks[index], "questionbanks");
            }
            else {
                console.log("Chunck index (" + index + ") is out of range (0, " + QstsChuncks.length + ")");
                curPageNum.value = curChunckIndex + 1;
            }
        }

        GotoChunckIndex(0);

        // These below will just display all instead of chunk by chunck.
        // CreateQATable(Qsts, "questionbanks");
    </script>
</body>
</html>