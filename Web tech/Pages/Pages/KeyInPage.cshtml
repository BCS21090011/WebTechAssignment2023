@page "/pages/keyinpage"
@model Web_tech.Pages.KeyInPageModel
@using Microsoft.AspNetCore.Authorization
@{
    if (User.IsInRole("User"))
    {
        // Content visible to SuperAdmin only
        <html lang="en">
        <head>
            <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
            <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
            <link rel="stylesheet" href="~/css/KeyInPage.css" asp-append-version="true" />
        </head>
        <body>
            <div class="Container">
                <div class="form-wrapper">
                    <form method="post" enctype="multipart/form-data" >
                        <label for="difficulty">Difficulty level:</label>
                        <select id="difficulty" asp-for="Questions.QuestionDifficulty" class="form-control">
                            <option value="1">Easy</option>
                            <option value="2">Medium</option>
                            <option value="3">Hard</option>
                        </select>

                        <label for="subject">Subject:</label>
                        <select id="subject" asp-for="Questions.SubjectsId" class="form-control">
                            @foreach (var subject in Model.Subjects)
                            {
                                <option value="@subject.SubjectsId">@subject.SubjectName</option>
                            }
                        </select>
                        <label for="question">Question:</label>
                        <textarea id="question" name="Questions.Question" class="form-control"></textarea>

                        <label for="question">Answer:</label>
                         <textarea id="answer" name="Questions.Answer" class="form-control"></textarea>

                        <label for="marks">Marks:</label>
                        <input type="number" id="marks" name="Questions.QuestionMark" min="0" asp-for="Questions.QuestionMark" class="form-control">

                        <label for="question_image">Upload image:</label>
                        <input type="file" id="question_image" name="questionImage" onchange="previewImage(event, 'question-preview')">
                        <button id="question-preview-delete" type="button" class="delete-button" onclick="deleteImage('question-preview')">Delete</button>
                        <img id="question-preview" src="#" alt="Preview Image" style="display: none; max-width: 300px; max-height: 300px;">
                        
                        <label for="answer_image">Upload image:</label>
                        <input type="file" id="answer_image" name="answerImage" onchange="previewImage(event, 'answer-preview')">
                        <button id="answer-preview-delete" type="button" class="delete-button" onclick="deleteImage('answer-preview')">Delete</button>
                        <img id="answer-preview" src="#" alt="Preview Image" style="display: none; max-width: 300px; max-height: 300px;">

                        <input type="submit" value="Submit"  class="btn btn-primary form-control">                       
                    </form>
                </div>
            </div>
            <div class="validation-summary-errors">
                <ul>
                    @foreach (var modelStateEntry in ViewData.ModelState.Values)
                    {
                        foreach (var error in modelStateEntry.Errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    }
                </ul>
            </div>           
        </body>
        
        <script>
            const subjectSelect = document.getElementById('subject');
            const otherSubjectInput = document.getElementById('other-subject');

            subjectSelect.addEventListener('change', () => {
                if (subjectSelect.value === 'other') {
                    otherSubjectInput.style.display = 'inline';
                } else {
                    otherSubjectInput.style.display = 'none';
                }
            });
        </script>
        <script>
            

            


            function previewImage(event, previewId) {
                var input = event.target;
                var preview = document.getElementById(previewId);

                if (input.files && input.files[0]) {
                    console.log("Image should be displayed!");
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        console.log(e);
                        preview.src = e.target.result;
                        preview.style.display = "block";
                    };

                    reader.readAsDataURL(input.files[0]);
                } else {
                    console.log("No image should be displayed!");
                    preview.src = "#";
                    preview.style.display = "none";
                }
            }

            function deleteImage(previewId) {
                var preview = document.getElementById(previewId);
                preview.src = '#';
                preview.style.display = 'none';

                var deleteButton = document.querySelector(`#${previewId}-delete`);
                deleteButton.style.display = 'none';

                var fileInput = document.querySelector(`#${previewId.split('-')[0]}_image`);
                fileInput.value = '';
                var originalDeleteButton = document.getElementById(previewId.split('-')[0] + '-preview-delete');
                originalDeleteButton.style.display = 'inline-block';
            }
        </script>
        </html>
    }
}